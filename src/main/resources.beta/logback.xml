<?xml version="1.0" encoding="UTF-8"?>
<!--
scan：当此属性设置为true时，如果配置文件发改变，将会自动重新加载配置文件，默认值为true
scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。
            当scan为true时，此属性生效。默认的时间间隔为1分钟。
debug: 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false
-->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <!--
    appender：负责写日志的组件，它有两个必要属性name和class。name指定appender名称，class指定appender的全限定名
    -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <!--encoding：设置编码-->
        <encoding>UTF-8</encoding>
        <!--encoder：对日志进行格式化-->
        <encoder>
            <pattern>[%d{HH:mm:ss.SSS}][%p][%c{40}][%t] %m%n</pattern>
        </encoder>
        <!--大于DEBUG级别的日志都会显示-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!--定义输出的级别-->
            <level>DEBUG</level>
        </filter>
    </appender>
    <!--
    RollingFileAppender：滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件
    -->
    <appender name="mall" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--
        File：被写入的文件的名称
        可以是相对目录，也可以是绝对目录，如果上级目录不存在会自动创建
        -->
        <!--<File>d:/apache-tomcat-8.0.52/logs/mall.log</File>-->
        <File>/developer/apache-tomcat-7.0.73/logs/mall.log</File>
        <!--
        rollingPolicy：当发生滚动时，决定RollingFileAppender的行为，涉及文件移动和重命名
        属性class定义具体的滚动策略类：class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"：
        最常用的滚动策略，它根据时间来制定滚动策略，既负责滚动也负责出发滚动
        -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--
            <fileNamePattern>：必要节点，包含文件名及“%d”转换符，
            “%d”可以包含一个java.text.SimpleDateFormat指定的时间格式，如：%d{yyyy-MM}。
            如果直接使用 %d，默认格式是 yyyy-MM-dd。RollingFileAppender的file字节点可有可无，通过设置file，
            可以为活动文件和归档文件指定不同位置，当前日志总是记录到file指定的文件（活动文件），活动文件的名字不会改变；
            如果没设置file，活动文件的名字会根据fileNamePattern 的值，每隔一段时间改变一次。“/”或者“\”会被当做目录分隔符。
            -->
            <fileNamePattern>/developer/apache-tomcat-7.0.73/logs/mall.log.%d{yyyy-MM-dd}.gz</fileNamePattern>
            <!--如果是 true，日志被追加到文件结尾，如果是 false，清空现存文件，默认是true-->
            <append>true</append>
            <!--最长存储时间15天-->
            <maxHistory>15</maxHistory>
        </rollingPolicy>
        <!--
        <encoder>：对记录事件进行格式化
        -->
        <encoder>
            <pattern>[%d{HH:mm:ss.SSS}][%p][%c{40}][%t] %m%n</pattern>
        </encoder>
    </appender>


    <appender name="error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>d:/apache-tomcat-8.0.52/logs/error.log</File>
        <!--<File>/developer/apache-tomcat-7.0.73/logs/error.log</File>-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>/developer/apache-tomcat-7.0.73/logs/error.log.%d{yyyy-MM-dd}.gz</fileNamePattern>
            <!--<fileNamePattern>d:/mmalllog/error.log.%d{yyyy-MM-dd}.gz</fileNamePattern>-->
            <append>true</append>
            <maxHistory>15</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>[%d{HH:mm:ss.SSS}][%p][%c{40}][%t] %m%n</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <!--当级别匹配时接收-->
            <onMatch>ACCEPT</onMatch>
            <!--级别不匹配，拒绝-->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    <!--
    logger：用来设置某一个包或具体的某一个类的日志打印级别、以及指定<appender>
    name: 用来指定受此logger约束的某一个包或者具体的某一个类
    level: 用来设置打印级别
    additivity: 是否向上级loger传递打印信息
    -->
    <logger name="com.mall" additivity="false" level="INFO">
        <appender-ref ref="mall"/>
        <appender-ref ref="console"/>
    </logger>

    <!--打印mybatis的日志-->
    <logger name="com.mall.dao" level="DEBUG">
        <appender-ref ref="console"/>
    </logger>

    <root level="DEBUG">
        <appender-ref ref="console"/>
        <appender-ref ref="error"/>
    </root>

</configuration>